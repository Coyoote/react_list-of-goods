{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","sortAlphabetic","setState","ALPHABET","sortByLength","LENGTH","reverseList","resetList","this","sortedGoods","goods","visibleGoods","sort","a","b","length","reverse","getReorderedGoods","isModified","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEJ,SAAUJ,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEJ,SAAUJ,EAASW,UAXvC,EAcEC,YAAc,WACZ,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBAhBzB,EAoBEO,UAAY,WACV,EAAKL,SAAS,CAAEJ,SAAUJ,EAASK,KAAMC,YAAY,KArBzD,4CAwBE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZS,EAzDH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENW,EAAY,YAAOD,GAEzB,OAAQZ,GACN,KAAKJ,EAASS,SACZQ,EAAaC,OACb,MAEF,KAAKlB,EAASW,OACZM,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAU7C,OAJIf,GACFW,EAAaK,UAGRL,EAmCeM,CAAkBtB,EAAiBa,KAAKX,OACtDqB,EAAapB,IAAaJ,EAASK,MAAQC,EAEjD,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,kBACA,CACE,WAAYvB,IAAaJ,EAASS,WAGtCmB,QAASd,KAAKP,eARhB,iCAaA,wBACEmB,KAAK,SACLD,UAAWE,IACT,qBACA,CACE,WAAYvB,IAAaJ,EAASW,SAGtCiB,QAASd,KAAKJ,aARhB,4BAaA,wBACEgB,KAAK,SACLD,UAAWE,IACT,qBACA,CACE,YAAarB,IAGjBsB,QAASd,KAAKF,YARhB,qBAaCY,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,UAHhB,sBAUJ,6BACE,6BACGE,EAAYc,KAAI,SAACC,GAAD,OACf,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBAvFrB,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.96afff4c.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  sortAlphabetic = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetList = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const sortedGoods = getReorderedGoods(goodsFromServer, this.state);\n    const isModified = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info ',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.sortAlphabetic}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success ',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning ',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverseList}\n          >\n            Reverse\n          </button>\n\n          {isModified && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetList}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {sortedGoods.map((good) => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}